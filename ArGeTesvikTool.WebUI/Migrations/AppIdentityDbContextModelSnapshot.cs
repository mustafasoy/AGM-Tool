// <auto-generated />
using System;
using ArGeTesvikTool.WebUI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArGeTesvikTool.WebUI.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    partial class AppIdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.BusinessContactDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<string>("Mail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Mail");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSurname");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("BusinessContacts");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.BusinessFinancialInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcquisitionTurnover")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AcquisitionTurnover");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("DomesticSales")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DomesticSales");

                    b.Property<string>("ExportSales")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ExportSales");

                    b.Property<string>("GrossSales")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("GrossSales");

                    b.Property<string>("LongTermLoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LongTermLoan");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NetSales")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NetSales");

                    b.Property<string>("RDExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("RDExpenditure");

                    b.Property<string>("SortTermLoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SortTermLoan");

                    b.Property<string>("TotalAsset")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TotalAsset");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("BusinessFinancialInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.BusinessInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ActivityCode");

                    b.Property<string>("Adress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Adress");

                    b.Property<string>("AvaibleCapital")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AvaibleCapital");

                    b.Property<string>("CRSNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CRSNumber");

                    b.Property<string>("ChamberCommerce")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ChamberCommerce");

                    b.Property<string>("CityCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CityCode");

                    b.Property<string>("CityText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CityText");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CompanyName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Date");

                    b.Property<string>("FoundingCapital")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FoundingCapital");

                    b.Property<string>("IsSME")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("IsSME");

                    b.Property<string>("Mail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Mail");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Partner")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Partner");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("PhoneNumber");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("date")
                        .HasColumnName("PublishDate");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TaxOffice");

                    b.Property<string>("TradeNumber")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("TradeNumber");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("BusinessInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.BusinessIntroDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("BusinessIntros");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.BusinessSchemaDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Content");

                    b.Property<string>("ContentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileExtension");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("FileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileName");

                    b.Property<string>("ModifedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("BusinessSchemas");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.GroupInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Address");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryText");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<DateTime>("FoundingDate")
                        .HasColumnType("date")
                        .HasColumnName("FoundingDate");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("BusinessGroupInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.PersonnelDistributionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociateDegree")
                        .HasColumnType("int")
                        .HasColumnName("AssociateDegree");

                    b.Property<int>("BachelorDegree")
                        .HasColumnType("int")
                        .HasColumnName("BachelorDegree");

                    b.Property<string>("CompanyUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CompanyUnit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<int>("Doctoral")
                        .HasColumnType("int")
                        .HasColumnName("Doctoral");

                    b.Property<int>("HighSchool")
                        .HasColumnType("int")
                        .HasColumnName("HighSchool");

                    b.Property<int>("MasterDegree")
                        .HasColumnType("int")
                        .HasColumnName("MasterDegree");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("PostDoctoral")
                        .HasColumnType("int")
                        .HasColumnName("PostDoctoral");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("Total");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("BusinessPersonnelDistributions");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.ShareholdersDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryText");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("Share")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("Share");

                    b.Property<string>("ShareAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ShareAmount");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("BusinessShareholders");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Business.StrategyDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("BusinessStrategies");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.FiscalYearDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("FiscalYears");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Index.NewDataDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("DomesticSalesRevenue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DomesticSalesRevenue");

                    b.Property<int>("InternationalProjectNumber")
                        .HasColumnType("int")
                        .HasColumnName("InternationalProjectNumber");

                    b.Property<bool>("IsIso14001")
                        .HasColumnType("bit")
                        .HasColumnName("Iso14001");

                    b.Property<bool>("IsIso9001")
                        .HasColumnType("bit")
                        .HasColumnName("Iso9001");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("NationalProjectNumber")
                        .HasColumnType("int")
                        .HasColumnName("NationalProjectNumber");

                    b.Property<string>("OverseasSalesRevenue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OverseasSalesRevenue");

                    b.Property<string>("PeriodicExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PeriodicExpenditure");

                    b.Property<string>("ProjectPeriodicExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProjectPeriodicExpenditure");

                    b.Property<string>("PublicPeriodicExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PublicPeriodicExpenditure");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("IndexNewDatas");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterAmountDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CashSupport")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CashSupport");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("DepreciationAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DepreciationAmount");

                    b.Property<string>("DesignExpense")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DesignExpense");

                    b.Property<string>("ExternalBenefit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ExternalBenefit");

                    b.Property<string>("GeneralExpense")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("GeneralExpense");

                    b.Property<string>("MaterialExpense")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MaterialExpense");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PersonelExpense")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PersonelExpense");

                    b.Property<string>("TaxExemption")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TaxExemption");

                    b.Property<string>("TaxFee")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TaxFee");

                    b.Property<string>("TotalExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TotalExpenditure");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterAmounts");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterAreaInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Content");

                    b.Property<string>("ContentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileExtension");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("FileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterAreaInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterContactDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("Birthday");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<string>("Mail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Mail");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSurname");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("RdCenterContacts");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterDiscountDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnnualTotal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AnnualTotal");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("CustomTaxException")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CustomTaxException");

                    b.Property<string>("IncentiveAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IncentiveAmount");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PremiumSupport")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PremiumSupport");

                    b.Property<string>("RatioTurnover")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("RatioTurnover");

                    b.Property<string>("StampTaxException")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("StampTaxException");

                    b.Property<string>("TaxExemption")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TaxExemption");

                    b.Property<string>("TotalExpenditure")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TotalExpenditure");

                    b.Property<string>("WithholdingIncentive")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("WithholdingIncentive");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterDiscounts");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Address");

                    b.Property<string>("CityCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CityCode");

                    b.Property<string>("CityText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CityText");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CompanyName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<DateTime>("DocReceiptDate")
                        .HasColumnType("date")
                        .HasColumnName("DocReceiptDate");

                    b.Property<string>("Location")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Location");

                    b.Property<string>("Mail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Mail");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("OfficeArea")
                        .HasColumnType("int")
                        .HasColumnName("OfficeArea");

                    b.Property<int>("OtherArea")
                        .HasColumnType("int")
                        .HasColumnName("OtherArea");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<int>("TotalArea")
                        .HasColumnType("int")
                        .HasColumnName("TotalArea");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("RdCenterInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterPhysicalAreaDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Content");

                    b.Property<string>("ContentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileExtension");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("FileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileName");

                    b.Property<string>("ModifedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterPhysicalAreas");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenter.RdCenterSchemaDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Content");

                    b.Property<string>("ContentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileExtension");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("FileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileName");

                    b.Property<string>("ModifedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterSchemas");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalPersAssingDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSurname");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProjectCode");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectName");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterCalPersAssings");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalPersAttendanceDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventTime");

                    b.Property<string>("Name")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("Name");

                    b.Property<string>("PersonnelNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PersonnelNumber");

                    b.Property<string>("Surname")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("Surname");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int")
                        .HasColumnName("TerminalId");

                    b.Property<string>("TerminalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TerminalName");

                    b.Property<string>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("RdCenterCalPersAttendances");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalPersonnelEntryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PersonnelFullName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PersonnelFullName");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProjectCode");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectName");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeAwayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TimeAwayCode");

                    b.Property<string>("TimeAwayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TimeAwayName");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserId");

                    b.Property<string>("WorkType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("WorkType");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RdCenterCalPersonnelEntries");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalPublicHolidayDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("HolidayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("HolidayName");

                    b.Property<bool>("IsHalfDay")
                        .HasColumnType("bit")
                        .HasColumnName("IsHalfDay");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("Month")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterCalPublicHolidays");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalTimeAwayDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("TimeAwayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TimeAwayCode");

                    b.Property<string>("TimeAwayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TimeAwayName");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("TimeAwayCode")
                        .IsUnique()
                        .HasFilter("[TimeAwayCode] IS NOT NULL");

                    b.ToTable("RdCenterCalTimeAways");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterPerformance.RdCenterPerformanceProjectDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Amount");

                    b.Property<string>("CommercialProductName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CommercialProductName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Explanation");

                    b.Property<bool>("IsImportProduct")
                        .HasColumnType("bit")
                        .HasColumnName("IsImportProduct");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectName");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterPerformanceProjects");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterPerson.RdCenterPersonInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryText");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("DoctoralDepartmant")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("DoctoralDepartmant");

                    b.Property<string>("DoctoralUniversity")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("DoctoralUniversity");

                    b.Property<string>("EducationStatu")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("EducationStatu");

                    b.Property<string>("GraduateUniversity")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("GraduateUniversity");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<string>("MasterDepartmant")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MasterDepartmant");

                    b.Property<string>("MasterUniversity")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MasterUniversity");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NameSurname");

                    b.Property<string>("PersonPosition")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PersonPosition");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("StartDate");

                    b.Property<string>("UniversityDepartmant")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UniversityDepartmant");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserId");

                    b.Property<string>("WorkType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("WorkType");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationNo")
                        .IsUnique()
                        .HasFilter("[RegistrationNo] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("RdCenterPersonInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterPerson.RdCenterPersonRewardDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("RdCenterPersonRewars");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterPerson.RdCenterPersonTimeAwayDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityType")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("ActivityType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("Month")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<decimal>("MonthlyTimeAway")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("MonthlyTimeAway");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectCode");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterPersonTimeAways");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechAcademicLibraryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("RdCenterTechAcademicLibraries");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechAttendedEventDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttendDate")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("AttendDate");

                    b.Property<string>("AttendedEvent")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("AttendedEvent");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Location");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("PersonNumber")
                        .HasColumnType("int")
                        .HasColumnName("PersonNumber");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Text");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechAttendedEvents");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechCollaborationDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Collaboration")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Collaboration");

                    b.Property<string>("CollaborationType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CollaborationType");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryText");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Partner")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Partner");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechCollaborations");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechIntellectualPropertyDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("date")
                        .HasColumnName("ApplicationDate");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("DevelopmentPlace")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DevelopmentPlace");

                    b.Property<string>("International")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("International");

                    b.Property<string>("InventionType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InventionType");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectName");

                    b.Property<string>("ProperyType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProperyType");

                    b.Property<string>("Statu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Statu");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechIntellectualProperties");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechMentorInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("MentorFirmName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("MentorFirmName");

                    b.Property<string>("MentorOutput")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MentorOutput");

                    b.Property<string>("MentorSupport")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MentorSupport");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechMentorInfos");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechProjectDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<byte[]>("DocumentContent")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("DocumentContent");

                    b.Property<string>("DocumentContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DocumentContentType");

                    b.Property<string>("DocumentFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DocumentFileName");

                    b.Property<string>("EquityAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EquityAmount");

                    b.Property<byte[]>("IncomeContent")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IncomeContent");

                    b.Property<string>("IncomeContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IncomeContentType");

                    b.Property<string>("IncomeFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IncomeFileName");

                    b.Property<string>("IntServiceProcurementAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IntServiceProcurementAmount");

                    b.Property<string>("IntSupportProgram")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IntSupportProgram");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NatServiceProcurementAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NatServiceProcurementAmount");

                    b.Property<string>("NatSupportProgram")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NatSupportProgram");

                    b.Property<string>("OrderBase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderBase");

                    b.Property<int>("PersonNumber")
                        .HasColumnType("int")
                        .HasColumnName("PersonNumber");

                    b.Property<string>("ProjectActivity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectActivity");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProjectCode");

                    b.Property<byte[]>("ProjectContent")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("ProjectContent");

                    b.Property<string>("ProjectContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectContentType");

                    b.Property<string>("ProjectDuration")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("ProjectDuration");

                    b.Property<DateTime>("ProjectEndDate")
                        .HasColumnType("date")
                        .HasColumnName("ProjectEndDate");

                    b.Property<string>("ProjectFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectFileName");

                    b.Property<string>("ProjectInnovative")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectInnovative");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProjectName");

                    b.Property<string>("ProjectOutput")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectOutput");

                    b.Property<string>("ProjectRequirement")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectRequirement");

                    b.Property<DateTime>("ProjectStartDate")
                        .HasColumnType("date")
                        .HasColumnName("ProjectStartDate");

                    b.Property<string>("ProjectStatu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ProjectStatu");

                    b.Property<string>("ProjectSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectSubject");

                    b.Property<string>("ProjectSummary")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectSummary");

                    b.Property<int>("ServiceProcurement")
                        .HasColumnType("int")
                        .HasColumnName("ServiceProcurement");

                    b.Property<string>("ServiceProcurementAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ServiceProcurementAmount");

                    b.Property<string>("ServiceProcurementSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ServiceProcurementSubject");

                    b.Property<string>("SupportAmount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SupportAmount");

                    b.Property<string>("TotalProjectIncome")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TotalProjectIncome");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechProjects");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechProjectManagementDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Content");

                    b.Property<string>("ContentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileExtension");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("FileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("FileName");

                    b.Property<string>("ModifedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("RdCenterTechProjectManagements");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterTech.RdCenterTechSoftwareDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CopyNumber")
                        .HasColumnType("int")
                        .HasColumnName("CopyNumber");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CreatedUserName");

                    b.Property<string>("ModifedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ModifedUserName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("SoftwareName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SoftwareName");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("RdCenterTechSoftwares");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Report.IncomeDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnualLeaveTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("AnnualLeaveTimeSpend");

                    b.Property<decimal>("BaseUsedDay")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("BaseUsedDay");

                    b.Property<int>("Month")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<decimal>("NonRdCenterOtherTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("NonRdCenterOtherTimeSpend");

                    b.Property<decimal>("NonRdCenterTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("NonRdCenterTimeSpend");

                    b.Property<string>("PersonnelFullName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PersonnelFullName");

                    b.Property<decimal>("ProjectTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("ProjectTimeSpend");

                    b.Property<decimal>("RdCenterTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("RdCenterTimeSpend");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<decimal>("RemoteTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("RemoteTimeSpend");

                    b.Property<decimal>("UncentiveTimeSpend")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("UncentiveTimeSpend");

                    b.Property<string>("WorkType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("WorkType");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("IncomeReports");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.Report.SocialSecurityDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnuelLeaveWorkingHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("AnnuelLeaveWorkingHour");

                    b.Property<decimal>("IncentiveWorkingHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("IncentiveWorkingHour");

                    b.Property<int>("Month")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<string>("PersonnelFullName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PersonnelFullName");

                    b.Property<decimal>("PreMonthAnnuelLeaveHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PreMonthAnnuelLeaveHour");

                    b.Property<decimal>("PreMonthTransfer")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PreMonthTransfer");

                    b.Property<decimal>("PublicHolidayWorkingHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PublicHolidayWorkingHour");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<decimal>("SsiWorkingHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("SsiWorkingHour");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int")
                        .HasColumnName("WeekNumber");

                    b.Property<decimal>("WeekendWorkingHour")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("WeekendWorkingHour");

                    b.Property<string>("WorkType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("WorkType");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("SocialSecurityReports");
                });

            modelBuilder.Entity("ArGeTesvikTool.WebUI.Models.AppIdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleText")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("RoleText");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ArGeTesvikTool.WebUI.Models.AppIdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("LastName");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("RegistrationNo");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterCal.RdCenterCalPersonnelEntryDto", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", "User")
                        .WithMany("PersonnelEntries")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ArGeTesvikTool.Entities.Concrete.RdCenterPerson.RdCenterPersonInfoDto", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", "User")
                        .WithOne("PersonnelInfo")
                        .HasForeignKey("ArGeTesvikTool.Entities.Concrete.RdCenterPerson.RdCenterPersonInfoDto", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ArGeTesvikTool.WebUI.Models.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArGeTesvikTool.WebUI.Models.AppIdentityUser", b =>
                {
                    b.Navigation("PersonnelEntries");

                    b.Navigation("PersonnelInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
